// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model FriendRequest {
  id          String   @id @default(uuid())
  recipient   User     @relation("RecipientsOnFriendRequests", fields: [recipientId], references: [id], onDelete: Cascade)
  recipientId String
  sender      User     @relation("SendersOnFriendRequests", fields: [senderId], references: [id], onDelete: Cascade)
  senderId    String
  createdAt   DateTime @default(now())
  unread      Boolean  @default(true)
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                     String          @id @default(uuid())
  name                   String?
  email                  String?         @unique
  emailVerified          DateTime?
  image                  String?
  accounts               Account[]
  sessions               Session[]
  friendedBy             Friendship[]    @relation("AcceptorOnFriendship")
  friended               Friendship[]    @relation("InitiatorOnFriendship")
  receivedFriendRequests FriendRequest[] @relation("RecipientsOnFriendRequests")
  sentFriendRequests     FriendRequest[] @relation("SendersOnFriendRequests")
}

model Friendship {
  initiatedBy   User     @relation("InitiatorOnFriendship", fields: [initiatedById], references: [id])
  initiatedById String
  acceptedBy    User     @relation("AcceptorOnFriendship", fields: [acceptedById], references: [id])
  acceptedById  String
  createdAt     DateTime @default(now())

  @@id([acceptedById, initiatedById])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
